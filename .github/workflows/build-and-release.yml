name: Build and Release Homecoming App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Run Flutter tests
      run: flutter test
      
    - name: Build Android APK (Debug)
      run: |
        flutter build apk --debug \
          --dart-define=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
          --dart-define=ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}
      
    - name: Build Android APK (Release)
      run: |
        flutter build apk --release \
          --dart-define=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
          --dart-define=ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}
          
    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: homecoming-debug-apk
        path: build/app/outputs/flutter-apk/app-debug.apk
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v3
      with:
        name: homecoming-release-apk
        path: build/app/outputs/flutter-apk/app-release.apk

  build-web:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Build Web
      run: |
        flutter build web --release \
          --dart-define=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
          --dart-define=ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}
          
    - name: Upload Web Build
      uses: actions/upload-artifact@v3
      with:
        name: homecoming-web-build
        path: build/web/

  create-release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [build-android, build-web]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download Release APK
      uses: actions/download-artifact@v3
      with:
        name: homecoming-release-apk
        path: ./artifacts/
        
    - name: Download Web Build
      uses: actions/download-artifact@v3
      with:
        name: homecoming-web-build
        path: ./web-build/
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Homecoming AI Avatar v${{ github.run_number }}
        body: |
          ðŸ¤– **Homecoming AI Avatar App - Automated Build**
          
          ## ðŸ“± Downloads
          - **Android APK**: Ready for installation on Android devices
          - **Web Build**: Deploy to any web hosting service
          
          ## âœ¨ Features in this Build
          - Pure Flutter AI Avatar with dynamic personality
          - OpenAI GPT-4o/GPT-5 integration
          - ElevenLabs text-to-speech support
          - Cross-platform compatibility
          - Secure API key management
          
          ## ðŸ”§ Installation
          1. Download the APK file below
          2. Enable "Install from unknown sources" on your Android device
          3. Install the APK
          4. Enjoy chatting with Kai!
          
          **Build Date**: ${{ github.event.head_commit.timestamp }}
          **Commit**: ${{ github.sha }}
        draft: false
        prerelease: false
        
    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/app-release.apk
        asset_name: homecoming-ai-avatar-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive