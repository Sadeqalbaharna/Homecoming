name: Build and Deploy to Firebase App Distribution (DISABLED)

# Temporarily disabled due to authentication issues
# This workflow is disabled - using working-firebase-distribution.yml instead
on:
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release Notes'
        required: false
        default: 'New build with latest features'

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Build Android APK (Release)
      run: |
        flutter build apk --release \
          --dart-define=OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          --dart-define=ELEVENLABS_API_KEY="${{ secrets.ELEVENLABS_API_KEY }}" \
          --dart-define=FIREBASE_PROJECT_ID="homecoming-74f73" \
          --dart-define=FIREBASE_DATABASE_URL="https://homecoming-74f73-default-rtdb.europe-west1.firebasedatabase.app"
      
    - name: Setup Firebase CLI and Authenticate
      run: |
        # Install Firebase CLI
        npm install -g firebase-tools
        
        # Create service account file
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}' > $GITHUB_WORKSPACE/firebase-service-account.json
        
        # Set environment variable for authentication
        echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/firebase-service-account.json" >> $GITHUB_ENV
        
    - name: Upload APK to Firebase App Distribution
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase-service-account.json
      run: |
        # Verify the service account file exists
        ls -la firebase-service-account.json
        
        # Use firebase CLI with service account authentication
        firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
          --app "${{ secrets.FIREBASE_APP_ID }}" \
          --groups "testers" \
          --release-notes "ðŸ¤– Homecoming AI Avatar - Build #${{ github.run_number }}
          
          ðŸ“… Build Date: $(date)
          ðŸ”§ Commit: ${{ github.sha }}
          
          ${{ github.event.inputs.release_notes || 'Automated build with latest updates' }}
          
          âœ¨ Features:
          - AI Avatar with dynamic personality
          - OpenAI GPT integration
          - ElevenLabs voice synthesis
          - Firebase cloud persistence
          - Cross-platform Flutter UI
          
          ðŸ“± Install and test with your API keys securely embedded!
          ðŸ“Š Data syncs to Firebase project: homecoming-74f73"
          
    - name: Cleanup service account file
      if: always()
      run: rm -f $GITHUB_WORKSPACE/firebase-service-account.json
          
    - name: Create GitHub Release
      if: github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Homecoming AI Avatar v${{ github.run_number }}
        body: |
          ðŸš€ **Homecoming AI Avatar** - Automated Release
          
          ðŸ“± **Firebase Distribution**: APK distributed to testers automatically
          ðŸ“… **Build Date**: ${{ github.event.head_commit.timestamp }}
          ðŸ”§ **Commit**: ${{ github.sha }}
          
          ## ðŸ”— Links
          - Check Firebase App Distribution for APK download
          - View build logs in GitHub Actions
          
          ## âœ¨ What's New
          ${{ github.event.inputs.release_notes || 'Latest updates and improvements' }}
        draft: false
        prerelease: false