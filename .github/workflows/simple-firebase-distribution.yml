name: Simple Firebase Distribution

on:
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release Notes'
        required: false
        default: 'Manual build for testing'

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Build Android APK (Release)
      run: |
        flutter build apk --release \
          --dart-define=OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          --dart-define=ELEVENLABS_API_KEY="${{ secrets.ELEVENLABS_API_KEY }}"
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: homecoming-app-release
        path: build/app/outputs/flutter-apk/app-release.apk
        
    - name: Setup Firebase CLI and Distribute
      run: |
        # Install Firebase CLI
        curl -sL https://firebase.tools | bash
        
        # Create service account file
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}' > $HOME/firebase-service-account.json
        
        # Set environment variable
        export GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase-service-account.json
        
        # Distribute to Firebase
        firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
          --app "${{ secrets.FIREBASE_APP_ID }}" \
          --groups "testers" \
          --release-notes "${{ github.event.inputs.release_notes || 'Automated build for testing' }}"
        
        # Cleanup
        rm -f $HOME/firebase-service-account.json